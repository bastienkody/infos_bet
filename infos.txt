--> instructions
// code
__: remarques

------------------------
| NEXT MATCHS + COTE : |
------------------------
http://www.comparateur-de-cotes.fr/comparateur/

--> on complete l'url par un des sports suivants :
	- football
	- tennis
	- rugby
	- basketball
	- handball
	- volleyball
	- hockey sur glace
	- boxe


--------
TENNIS :
--------
--> chaque sport se complete par une competition (ligue 1, Rolland-Garros etc)
Les compets changent. On ne peut pas hardcode. On peut les recup sur le site : 
// curl -s http://www.comparateur-de-cotes.fr/comparateur/tennis | grep -o "<a href=\"comparateur/tennis/.*\"><"

--> on peut requeter chaque compet :
curl -s http://www.comparateur-de-cotes.fr/comparateur/tennis/compet_X
--: on stocke chaque req de compet dans un fichier : "req" + "compet_name" 

--> chaque compet se complete par des matchs. Tous les matchs sont stockes dans un <table class="bettable".
--> on verifie qu'il y a des matchs (ie. une bet table)
// cat $compet_res | egrep -q "<table class=\"bettable\"" || echo "pas de bet_table pour $sport et $compet" 

__: Les titres de matchs (date heure + noms joueurs) se situent dans un <tr style="background-color:white", puis un <td width="330" class="maincol ".
--: Les noms de joueurs dans un <a class="otn"
--: les paris dans des <tr class="trout"

--> on compte le nb de match 
// nb_match=$(echo $compet_res | egrep "<tr style=\"background-color:white\"" | wc -l)
__: si egal a zero on quitte cette compet
[[ echo $nb_match -lt 1 ]] && echo "pas de match pour $compet" && exit

--> on recuperer une trentaine de lignes apres le "debut" de chaque match, c'est suffisant
// all_match_infos=$(egrep -A 30 "<td width=\"330\" class=\"maincol ")
--: on a 30 * nb_match de lignes. Il faut departager les infos par match.
--: on va pour chaque match chercher les x premieres occurences de class="maincol" avec ses 30 lignes (cad 1 match), et ne recup que les 30 dernieres lignes
--> ie. premier match
// echo $all_match_infos | egrep -m1 -A 30 "<td width=\"330\" class=\"maincol "
--> ie. N eme match
// echo $all_match_infos | egrep -mN -A 30 "<td width=\"330\" class=\"maincol " | tail -n 30
__: on peut boucler grace a $nb_match.

--> pour chaque match on recup la date : 
--: typo de date : " Dimanche 16 avril 2023 &agrave; 13h00 " , attention multiples espaces possibles; en regex :
// echo $single_match_infos |Â egrep -o "[A-Z].[a-z]{4,7}[ ]*[0-9]{1,2}[ ]*[a-z]{3,9}[ ]*[0-9]{4}[ ]*&agrave;[ ]*[0-9]{2}h[0-9]{2}"
__: mis en forme propre (agrave et multi spaces)
// sed s/"&agrave;"//g | tr -s " "

--> pour chaque match on recup Nom des joueurs (dans un <h2 class="matchname", puis un <a class="otn" par joueur)
// echo $single_match_infos | grep "<a class=\"otn\"" | grep -o ">.*<" | tr -d "<>"
__: attention joueur pe != Prenom + Nom (genre louis de funes)
__: ATTENTION AUX DOUBLES EN TENNIS / en fait ca va le format est identique : 
__: toujours deux lignes class=otn, mais 2 joueurs par ligne separes par & :
				<a class="otn" href="comparateur/tennis/Giuliana-Olmos-&-Ena-Shibahara-td176491">Giuliana Olmos & Ena Shibahara</a> -
				<a class="otn" href="comparateur/tennis/Danielle-Rose-Collins-&-Desirae-Krawczyk-td176311">Danielle Rose Collins & Desirae Krawczyk</a>

----------------
RANKING TENNIS :
----------------
classement tennis : https://www.tennisendirect.net/atp/classement/

--> on peut scrapper le ranking d'un joueur (ie. Daniel Elahi) : 
curl -s https://www.tennisendirect.net/atp/classement/ | sed s/"<tr"/\\n/g | grep -i "Daniel Elahi" | egrep -o "class=\"w20\">[0-9]{1,3}" | cut -d'>' -f2
__: Classement hommes vs femmes : il faut savoir le sexe avant cette requete
